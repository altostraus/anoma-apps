module Label;

import Stdlib.Prelude open;
import Anoma open;
import AnomaHelpers open;

import Token.Label open;
import Token.Logic open;
import Token.Supply open;

mkKudoLabel (originator : PublicKey) : Label :=
  mkLabel@{
    name := "Kudos";
    symbol := "KDS";
    decimals := 18;
    supply := Unbound;
    transferable := true;
    originator
  };

isKudo (originator : KeyPair) (token : Resource)  : Bool :=
  let
    expectedLabel := mkKudoLabel (KeyPair.pubKey originator);
    label := getLabel token;
    expectedLogic := anomaEncode (tokenLogic (Label.supply expectedLabel));
    logic := anomaEncode (Resource.logic token);
  in if
    | label /= expectedLabel := false
    | logic /= expectedLogic := false
    | else := true;

notKudoError : Error :=
  mkError@{
    msg := "The input resource is not a Kudo token."
  };
