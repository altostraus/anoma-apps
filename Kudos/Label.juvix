module Label;

import Stdlib.Prelude open;

import Anoma open;
import Anoma.Builtin.System open;

import Applib open;
import Applib.Token open;
import Applib.Resource.Traits open;

mkKudoLabel (originator : ExternalIdentity) : TokenLabel :=
  mkTokenLabel@{
    name := "Kudos";
    symbol := "KDS";
    decimals := 18;
    supply := Unbound;
    transferability := Transferability.Transferable;
    originator;
  };

isKudo (originator : ExternalIdentity) (token : Token) : Bool :=
  let
    expectedLabel : TokenLabel := mkKudoLabel originator;
    label : TokenLabel := HasLabel.get token;
    expectedLogicEncoded : Nat :=
      tokenLogic (TokenLabel.supply expectedLabel) originator |> anomaEncode;
    logicEncoded : Nat := HasLogic.get token |> anomaEncode;
  in if
    | label /= expectedLabel := false
    | logicEncoded /= expectedLogicEncoded := false
    | else := true;
