module Extra.Tx;

import Stdlib.Prelude open;
import Mtl open;
import BaseLayer.ResourceMachine open;
import Extra.Anoma as Anoma;
import Extra.Random open;
import Anoma open;
import Applib.Helpers open using {StandardInputs};
import Extra.Todo open;

-- TODO Temporary name
Tx (A : Type) : Type := StateT PRNG (ReaderT StandardInputs Mtl.Identity) A;

-- workaround for the limitation with instance termination
instance
TxMonadReaderI
  : MonadReader
    StandardInputs
    (StateT PRNG (ReaderT StandardInputs Mtl.Identity)) :=
  mkMonadReader@{
    ask := MonadReader.ask;
    local := MonadReader.local;
  };

runTx' {A} (seed : Nat) (si : StandardInputs) : Tx A -> A :=
  evalState (mkPrng seed) >> runReader si >> Mtl.runIdentity;

runTx (seed : Nat) (si : StandardInputs) : Tx Transaction -> Transaction :=
  evalState (mkPrng seed) >> runReader si >> Mtl.runIdentity;

genRandomNonce : Tx Nonce := Anoma.randomNonce';
