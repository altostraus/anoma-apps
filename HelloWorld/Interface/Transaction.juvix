module HelloWorld.Interface.Transaction;

import Anoma open;
import Applib open;
import Stdlib.Prelude open;

import Anoma.State.CommitmentTree open;
import BaseLayer.ResourceMachine open;
import HelloWorld.Resource open;
import BaseLayer.TransactionRequest open;

initialize (randSeed : Nat) (standardInputs : StandardInputs) : Transaction :=
  runTx
    randSeed
    standardInputs
    do {
      nonce1 <- genRandomNonce;
      nonce2 <- genRandomNonce;
      pure
        prepareTransaction@{
          consumed :=
            [
              mkHelloWorldResource@{
                nonce := nonce1;
                ephemeral := true;
              };
            ];
          created :=
            [
              mkHelloWorldResource@{
                nonce := nonce2;
                ephemeral := false;
              };
            ];
        };
    };

prepareTransaction (consumed created : List Resource) : Transaction :=
  mkTransactionHelper@{
    actions :=
      [
        mkActionHelper@{
          consumed;
          created;
        };
      ];
  };

std : StandardInputs :=
  mkStandardInputs@{
    caller := Universal.identity;
    currentRoot := mkRoot 0;
  };

tx : Transaction := initialize 0 std;

main : TransactionRequest := TransactionRequest.fromTransaction tx;
