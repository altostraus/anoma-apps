module HelloWorld.Resource;

import Stdlib.Prelude open;
import Stdlib.Data.Set as Set open;

import Anoma open;
import Anoma.Builtin.System open;

import Applib.Identities open;
import Applib.Helpers open;

--- A dummy logic function that always returns true.
logic (publicInputs : Logic.Instance) (privateInputs : Logic.Witness) : Bool :=
  case findResource (Logic.Instance.tag publicInputs) privateInputs of
    | ConsumedRes self := Resource.ephemeral self == false
    | CreatedRes self := Resource.ephemeral self == false
    | NonExisting := false;

--- A label containing the string "Hello world!".
label : Nat := anomaEncode "Hello world!";

mkHelloWorldResource (nonce : Nonce) {ephemeral : Bool := false} : Resource :=
  mkResource@{
    label;
    logic;
    value := 0;
    quantity := 1;
    nonce := 123;
    -- nonceToNat nonce;
    ephemeral;
    randSeed := 0;
    nullifierKeyCommitment := 0;
  };
-- unNullifierKeyCommitment Universal.nullifierKeyCommitment |> toAnomaContents;
