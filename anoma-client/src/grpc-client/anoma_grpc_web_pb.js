/**
 * @fileoverview gRPC-Web generated client stub for Anoma.Protobuf
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.2
// source: anoma.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var nock_prove_pb = require('./nock/prove_pb.js')

var nock_run_pb = require('./nock/run_pb.js')

var intents_list_intents_pb = require('./intents/list_intents_pb.js')

var intents_add_intent_pb = require('./intents/add_intent_pb.js')

var intents_compose_pb = require('./intents/compose_pb.js')

var intents_verify_pb = require('./intents/verify_pb.js')

var indexer_nullifiers_pb = require('./indexer/nullifiers_pb.js')

var indexer_unrevealed_commits_pb = require('./indexer/unrevealed_commits_pb.js')

var indexer_unspent_resources_pb = require('./indexer/unspent_resources_pb.js')

var mempool_add_transaction_pb = require('./mempool/add_transaction_pb.js')

var mempool_dump_pb = require('./mempool/dump_pb.js')

var indexer_blocks_get_pb = require('./indexer/blocks/get_pb.js')

var indexer_blocks_latest_pb = require('./indexer/blocks/latest_pb.js')

var indexer_blocks_root_pb = require('./indexer/blocks/root_pb.js')

var indexer_blocks_filter_pb = require('./indexer/blocks/filter_pb.js')
const proto = {};
proto.Anoma = {};
proto.Anoma.Protobuf = require('./anoma_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.Anoma.Protobuf.NockServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.Anoma.Protobuf.NockServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Anoma.Protobuf.Nock.Prove.Request,
 *   !proto.Anoma.Protobuf.Nock.Prove.Response>}
 */
const methodDescriptor_NockService_Prove = new grpc.web.MethodDescriptor(
  '/Anoma.Protobuf.NockService/Prove',
  grpc.web.MethodType.UNARY,
  nock_prove_pb.Request,
  nock_prove_pb.Response,
  /**
   * @param {!proto.Anoma.Protobuf.Nock.Prove.Request} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  nock_prove_pb.Response.deserializeBinary
);


/**
 * @param {!proto.Anoma.Protobuf.Nock.Prove.Request} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Anoma.Protobuf.Nock.Prove.Response)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Anoma.Protobuf.Nock.Prove.Response>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Anoma.Protobuf.NockServiceClient.prototype.prove =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Anoma.Protobuf.NockService/Prove',
      request,
      metadata || {},
      methodDescriptor_NockService_Prove,
      callback);
};


/**
 * @param {!proto.Anoma.Protobuf.Nock.Prove.Request} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Anoma.Protobuf.Nock.Prove.Response>}
 *     Promise that resolves to the response
 */
proto.Anoma.Protobuf.NockServicePromiseClient.prototype.prove =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Anoma.Protobuf.NockService/Prove',
      request,
      metadata || {},
      methodDescriptor_NockService_Prove);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Anoma.Protobuf.Nock.Run.Request,
 *   !proto.Anoma.Protobuf.Nock.Run.Response>}
 */
const methodDescriptor_NockService_Run = new grpc.web.MethodDescriptor(
  '/Anoma.Protobuf.NockService/Run',
  grpc.web.MethodType.UNARY,
  nock_run_pb.Request,
  nock_run_pb.Response,
  /**
   * @param {!proto.Anoma.Protobuf.Nock.Run.Request} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  nock_run_pb.Response.deserializeBinary
);


/**
 * @param {!proto.Anoma.Protobuf.Nock.Run.Request} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Anoma.Protobuf.Nock.Run.Response)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Anoma.Protobuf.Nock.Run.Response>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Anoma.Protobuf.NockServiceClient.prototype.run =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Anoma.Protobuf.NockService/Run',
      request,
      metadata || {},
      methodDescriptor_NockService_Run,
      callback);
};


/**
 * @param {!proto.Anoma.Protobuf.Nock.Run.Request} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Anoma.Protobuf.Nock.Run.Response>}
 *     Promise that resolves to the response
 */
proto.Anoma.Protobuf.NockServicePromiseClient.prototype.run =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Anoma.Protobuf.NockService/Run',
      request,
      metadata || {},
      methodDescriptor_NockService_Run);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.Anoma.Protobuf.IntentsServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.Anoma.Protobuf.IntentsServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Anoma.Protobuf.Intents.List.Request,
 *   !proto.Anoma.Protobuf.Intents.List.Response>}
 */
const methodDescriptor_IntentsService_ListIntents = new grpc.web.MethodDescriptor(
  '/Anoma.Protobuf.IntentsService/ListIntents',
  grpc.web.MethodType.UNARY,
  intents_list_intents_pb.Request,
  intents_list_intents_pb.Response,
  /**
   * @param {!proto.Anoma.Protobuf.Intents.List.Request} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  intents_list_intents_pb.Response.deserializeBinary
);


/**
 * @param {!proto.Anoma.Protobuf.Intents.List.Request} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Anoma.Protobuf.Intents.List.Response)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Anoma.Protobuf.Intents.List.Response>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Anoma.Protobuf.IntentsServiceClient.prototype.listIntents =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Anoma.Protobuf.IntentsService/ListIntents',
      request,
      metadata || {},
      methodDescriptor_IntentsService_ListIntents,
      callback);
};


/**
 * @param {!proto.Anoma.Protobuf.Intents.List.Request} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Anoma.Protobuf.Intents.List.Response>}
 *     Promise that resolves to the response
 */
proto.Anoma.Protobuf.IntentsServicePromiseClient.prototype.listIntents =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Anoma.Protobuf.IntentsService/ListIntents',
      request,
      metadata || {},
      methodDescriptor_IntentsService_ListIntents);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Anoma.Protobuf.Intents.Add.Request,
 *   !proto.Anoma.Protobuf.Intents.Add.Response>}
 */
const methodDescriptor_IntentsService_AddIntent = new grpc.web.MethodDescriptor(
  '/Anoma.Protobuf.IntentsService/AddIntent',
  grpc.web.MethodType.UNARY,
  intents_add_intent_pb.Request,
  intents_add_intent_pb.Response,
  /**
   * @param {!proto.Anoma.Protobuf.Intents.Add.Request} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  intents_add_intent_pb.Response.deserializeBinary
);


/**
 * @param {!proto.Anoma.Protobuf.Intents.Add.Request} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Anoma.Protobuf.Intents.Add.Response)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Anoma.Protobuf.Intents.Add.Response>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Anoma.Protobuf.IntentsServiceClient.prototype.addIntent =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Anoma.Protobuf.IntentsService/AddIntent',
      request,
      metadata || {},
      methodDescriptor_IntentsService_AddIntent,
      callback);
};


/**
 * @param {!proto.Anoma.Protobuf.Intents.Add.Request} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Anoma.Protobuf.Intents.Add.Response>}
 *     Promise that resolves to the response
 */
proto.Anoma.Protobuf.IntentsServicePromiseClient.prototype.addIntent =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Anoma.Protobuf.IntentsService/AddIntent',
      request,
      metadata || {},
      methodDescriptor_IntentsService_AddIntent);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Anoma.Protobuf.Intents.Compose.Request,
 *   !proto.Anoma.Protobuf.Intents.Compose.Response>}
 */
const methodDescriptor_IntentsService_Compose = new grpc.web.MethodDescriptor(
  '/Anoma.Protobuf.IntentsService/Compose',
  grpc.web.MethodType.UNARY,
  intents_compose_pb.Request,
  intents_compose_pb.Response,
  /**
   * @param {!proto.Anoma.Protobuf.Intents.Compose.Request} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  intents_compose_pb.Response.deserializeBinary
);


/**
 * @param {!proto.Anoma.Protobuf.Intents.Compose.Request} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Anoma.Protobuf.Intents.Compose.Response)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Anoma.Protobuf.Intents.Compose.Response>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Anoma.Protobuf.IntentsServiceClient.prototype.compose =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Anoma.Protobuf.IntentsService/Compose',
      request,
      metadata || {},
      methodDescriptor_IntentsService_Compose,
      callback);
};


/**
 * @param {!proto.Anoma.Protobuf.Intents.Compose.Request} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Anoma.Protobuf.Intents.Compose.Response>}
 *     Promise that resolves to the response
 */
proto.Anoma.Protobuf.IntentsServicePromiseClient.prototype.compose =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Anoma.Protobuf.IntentsService/Compose',
      request,
      metadata || {},
      methodDescriptor_IntentsService_Compose);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Anoma.Protobuf.Intents.Verify.Request,
 *   !proto.Anoma.Protobuf.Intents.Verify.Response>}
 */
const methodDescriptor_IntentsService_Verify = new grpc.web.MethodDescriptor(
  '/Anoma.Protobuf.IntentsService/Verify',
  grpc.web.MethodType.UNARY,
  intents_verify_pb.Request,
  intents_verify_pb.Response,
  /**
   * @param {!proto.Anoma.Protobuf.Intents.Verify.Request} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  intents_verify_pb.Response.deserializeBinary
);


/**
 * @param {!proto.Anoma.Protobuf.Intents.Verify.Request} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Anoma.Protobuf.Intents.Verify.Response)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Anoma.Protobuf.Intents.Verify.Response>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Anoma.Protobuf.IntentsServiceClient.prototype.verify =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Anoma.Protobuf.IntentsService/Verify',
      request,
      metadata || {},
      methodDescriptor_IntentsService_Verify,
      callback);
};


/**
 * @param {!proto.Anoma.Protobuf.Intents.Verify.Request} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Anoma.Protobuf.Intents.Verify.Response>}
 *     Promise that resolves to the response
 */
proto.Anoma.Protobuf.IntentsServicePromiseClient.prototype.verify =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Anoma.Protobuf.IntentsService/Verify',
      request,
      metadata || {},
      methodDescriptor_IntentsService_Verify);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.Anoma.Protobuf.IndexerServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.Anoma.Protobuf.IndexerServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Anoma.Protobuf.Indexer.Nullifiers.Request,
 *   !proto.Anoma.Protobuf.Indexer.Nullifiers.Response>}
 */
const methodDescriptor_IndexerService_ListNullifiers = new grpc.web.MethodDescriptor(
  '/Anoma.Protobuf.IndexerService/ListNullifiers',
  grpc.web.MethodType.UNARY,
  indexer_nullifiers_pb.Request,
  indexer_nullifiers_pb.Response,
  /**
   * @param {!proto.Anoma.Protobuf.Indexer.Nullifiers.Request} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  indexer_nullifiers_pb.Response.deserializeBinary
);


/**
 * @param {!proto.Anoma.Protobuf.Indexer.Nullifiers.Request} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Anoma.Protobuf.Indexer.Nullifiers.Response)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Anoma.Protobuf.Indexer.Nullifiers.Response>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Anoma.Protobuf.IndexerServiceClient.prototype.listNullifiers =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Anoma.Protobuf.IndexerService/ListNullifiers',
      request,
      metadata || {},
      methodDescriptor_IndexerService_ListNullifiers,
      callback);
};


/**
 * @param {!proto.Anoma.Protobuf.Indexer.Nullifiers.Request} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Anoma.Protobuf.Indexer.Nullifiers.Response>}
 *     Promise that resolves to the response
 */
proto.Anoma.Protobuf.IndexerServicePromiseClient.prototype.listNullifiers =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Anoma.Protobuf.IndexerService/ListNullifiers',
      request,
      metadata || {},
      methodDescriptor_IndexerService_ListNullifiers);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Anoma.Protobuf.Indexer.UnrevealedCommits.Request,
 *   !proto.Anoma.Protobuf.Indexer.UnrevealedCommits.Response>}
 */
const methodDescriptor_IndexerService_ListUnrevealedCommits = new grpc.web.MethodDescriptor(
  '/Anoma.Protobuf.IndexerService/ListUnrevealedCommits',
  grpc.web.MethodType.UNARY,
  indexer_unrevealed_commits_pb.Request,
  indexer_unrevealed_commits_pb.Response,
  /**
   * @param {!proto.Anoma.Protobuf.Indexer.UnrevealedCommits.Request} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  indexer_unrevealed_commits_pb.Response.deserializeBinary
);


/**
 * @param {!proto.Anoma.Protobuf.Indexer.UnrevealedCommits.Request} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Anoma.Protobuf.Indexer.UnrevealedCommits.Response)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Anoma.Protobuf.Indexer.UnrevealedCommits.Response>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Anoma.Protobuf.IndexerServiceClient.prototype.listUnrevealedCommits =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Anoma.Protobuf.IndexerService/ListUnrevealedCommits',
      request,
      metadata || {},
      methodDescriptor_IndexerService_ListUnrevealedCommits,
      callback);
};


/**
 * @param {!proto.Anoma.Protobuf.Indexer.UnrevealedCommits.Request} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Anoma.Protobuf.Indexer.UnrevealedCommits.Response>}
 *     Promise that resolves to the response
 */
proto.Anoma.Protobuf.IndexerServicePromiseClient.prototype.listUnrevealedCommits =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Anoma.Protobuf.IndexerService/ListUnrevealedCommits',
      request,
      metadata || {},
      methodDescriptor_IndexerService_ListUnrevealedCommits);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Anoma.Protobuf.Indexer.UnspentResources.Request,
 *   !proto.Anoma.Protobuf.Indexer.UnspentResources.Response>}
 */
const methodDescriptor_IndexerService_ListUnspentResources = new grpc.web.MethodDescriptor(
  '/Anoma.Protobuf.IndexerService/ListUnspentResources',
  grpc.web.MethodType.UNARY,
  indexer_unspent_resources_pb.Request,
  indexer_unspent_resources_pb.Response,
  /**
   * @param {!proto.Anoma.Protobuf.Indexer.UnspentResources.Request} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  indexer_unspent_resources_pb.Response.deserializeBinary
);


/**
 * @param {!proto.Anoma.Protobuf.Indexer.UnspentResources.Request} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Anoma.Protobuf.Indexer.UnspentResources.Response)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Anoma.Protobuf.Indexer.UnspentResources.Response>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Anoma.Protobuf.IndexerServiceClient.prototype.listUnspentResources =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Anoma.Protobuf.IndexerService/ListUnspentResources',
      request,
      metadata || {},
      methodDescriptor_IndexerService_ListUnspentResources,
      callback);
};


/**
 * @param {!proto.Anoma.Protobuf.Indexer.UnspentResources.Request} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Anoma.Protobuf.Indexer.UnspentResources.Response>}
 *     Promise that resolves to the response
 */
proto.Anoma.Protobuf.IndexerServicePromiseClient.prototype.listUnspentResources =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Anoma.Protobuf.IndexerService/ListUnspentResources',
      request,
      metadata || {},
      methodDescriptor_IndexerService_ListUnspentResources);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.Anoma.Protobuf.MempoolServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.Anoma.Protobuf.MempoolServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Anoma.Protobuf.Mempool.AddTransaction.Request,
 *   !proto.Anoma.Protobuf.Mempool.AddTransaction.Response>}
 */
const methodDescriptor_MempoolService_Add = new grpc.web.MethodDescriptor(
  '/Anoma.Protobuf.MempoolService/Add',
  grpc.web.MethodType.UNARY,
  mempool_add_transaction_pb.Request,
  mempool_add_transaction_pb.Response,
  /**
   * @param {!proto.Anoma.Protobuf.Mempool.AddTransaction.Request} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  mempool_add_transaction_pb.Response.deserializeBinary
);


/**
 * @param {!proto.Anoma.Protobuf.Mempool.AddTransaction.Request} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Anoma.Protobuf.Mempool.AddTransaction.Response)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Anoma.Protobuf.Mempool.AddTransaction.Response>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Anoma.Protobuf.MempoolServiceClient.prototype.add =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Anoma.Protobuf.MempoolService/Add',
      request,
      metadata || {},
      methodDescriptor_MempoolService_Add,
      callback);
};


/**
 * @param {!proto.Anoma.Protobuf.Mempool.AddTransaction.Request} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Anoma.Protobuf.Mempool.AddTransaction.Response>}
 *     Promise that resolves to the response
 */
proto.Anoma.Protobuf.MempoolServicePromiseClient.prototype.add =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Anoma.Protobuf.MempoolService/Add',
      request,
      metadata || {},
      methodDescriptor_MempoolService_Add);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Anoma.Protobuf.Mempool.Dump.Request,
 *   !proto.Anoma.Protobuf.Mempool.Dump.Response>}
 */
const methodDescriptor_MempoolService_Dump = new grpc.web.MethodDescriptor(
  '/Anoma.Protobuf.MempoolService/Dump',
  grpc.web.MethodType.UNARY,
  mempool_dump_pb.Request,
  mempool_dump_pb.Response,
  /**
   * @param {!proto.Anoma.Protobuf.Mempool.Dump.Request} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  mempool_dump_pb.Response.deserializeBinary
);


/**
 * @param {!proto.Anoma.Protobuf.Mempool.Dump.Request} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Anoma.Protobuf.Mempool.Dump.Response)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Anoma.Protobuf.Mempool.Dump.Response>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Anoma.Protobuf.MempoolServiceClient.prototype.dump =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Anoma.Protobuf.MempoolService/Dump',
      request,
      metadata || {},
      methodDescriptor_MempoolService_Dump,
      callback);
};


/**
 * @param {!proto.Anoma.Protobuf.Mempool.Dump.Request} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Anoma.Protobuf.Mempool.Dump.Response>}
 *     Promise that resolves to the response
 */
proto.Anoma.Protobuf.MempoolServicePromiseClient.prototype.dump =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Anoma.Protobuf.MempoolService/Dump',
      request,
      metadata || {},
      methodDescriptor_MempoolService_Dump);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.Anoma.Protobuf.BlockServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.Anoma.Protobuf.BlockServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Anoma.Protobuf.Indexer.Blocks.Get.Request,
 *   !proto.Anoma.Protobuf.Indexer.Blocks.Get.Response>}
 */
const methodDescriptor_BlockService_Get = new grpc.web.MethodDescriptor(
  '/Anoma.Protobuf.BlockService/Get',
  grpc.web.MethodType.UNARY,
  indexer_blocks_get_pb.Request,
  indexer_blocks_get_pb.Response,
  /**
   * @param {!proto.Anoma.Protobuf.Indexer.Blocks.Get.Request} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  indexer_blocks_get_pb.Response.deserializeBinary
);


/**
 * @param {!proto.Anoma.Protobuf.Indexer.Blocks.Get.Request} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Anoma.Protobuf.Indexer.Blocks.Get.Response)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Anoma.Protobuf.Indexer.Blocks.Get.Response>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Anoma.Protobuf.BlockServiceClient.prototype.get =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Anoma.Protobuf.BlockService/Get',
      request,
      metadata || {},
      methodDescriptor_BlockService_Get,
      callback);
};


/**
 * @param {!proto.Anoma.Protobuf.Indexer.Blocks.Get.Request} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Anoma.Protobuf.Indexer.Blocks.Get.Response>}
 *     Promise that resolves to the response
 */
proto.Anoma.Protobuf.BlockServicePromiseClient.prototype.get =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Anoma.Protobuf.BlockService/Get',
      request,
      metadata || {},
      methodDescriptor_BlockService_Get);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Anoma.Protobuf.Indexer.Blocks.Latest.Request,
 *   !proto.Anoma.Protobuf.Indexer.Blocks.Latest.Response>}
 */
const methodDescriptor_BlockService_Latest = new grpc.web.MethodDescriptor(
  '/Anoma.Protobuf.BlockService/Latest',
  grpc.web.MethodType.UNARY,
  indexer_blocks_latest_pb.Request,
  indexer_blocks_latest_pb.Response,
  /**
   * @param {!proto.Anoma.Protobuf.Indexer.Blocks.Latest.Request} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  indexer_blocks_latest_pb.Response.deserializeBinary
);


/**
 * @param {!proto.Anoma.Protobuf.Indexer.Blocks.Latest.Request} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Anoma.Protobuf.Indexer.Blocks.Latest.Response)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Anoma.Protobuf.Indexer.Blocks.Latest.Response>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Anoma.Protobuf.BlockServiceClient.prototype.latest =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Anoma.Protobuf.BlockService/Latest',
      request,
      metadata || {},
      methodDescriptor_BlockService_Latest,
      callback);
};


/**
 * @param {!proto.Anoma.Protobuf.Indexer.Blocks.Latest.Request} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Anoma.Protobuf.Indexer.Blocks.Latest.Response>}
 *     Promise that resolves to the response
 */
proto.Anoma.Protobuf.BlockServicePromiseClient.prototype.latest =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Anoma.Protobuf.BlockService/Latest',
      request,
      metadata || {},
      methodDescriptor_BlockService_Latest);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Anoma.Protobuf.Indexer.Blocks.Root.Request,
 *   !proto.Anoma.Protobuf.Indexer.Blocks.Root.Response>}
 */
const methodDescriptor_BlockService_Root = new grpc.web.MethodDescriptor(
  '/Anoma.Protobuf.BlockService/Root',
  grpc.web.MethodType.UNARY,
  indexer_blocks_root_pb.Request,
  indexer_blocks_root_pb.Response,
  /**
   * @param {!proto.Anoma.Protobuf.Indexer.Blocks.Root.Request} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  indexer_blocks_root_pb.Response.deserializeBinary
);


/**
 * @param {!proto.Anoma.Protobuf.Indexer.Blocks.Root.Request} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Anoma.Protobuf.Indexer.Blocks.Root.Response)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Anoma.Protobuf.Indexer.Blocks.Root.Response>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Anoma.Protobuf.BlockServiceClient.prototype.root =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Anoma.Protobuf.BlockService/Root',
      request,
      metadata || {},
      methodDescriptor_BlockService_Root,
      callback);
};


/**
 * @param {!proto.Anoma.Protobuf.Indexer.Blocks.Root.Request} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Anoma.Protobuf.Indexer.Blocks.Root.Response>}
 *     Promise that resolves to the response
 */
proto.Anoma.Protobuf.BlockServicePromiseClient.prototype.root =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Anoma.Protobuf.BlockService/Root',
      request,
      metadata || {},
      methodDescriptor_BlockService_Root);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Anoma.Protobuf.Indexer.Blocks.Filtered.Request,
 *   !proto.Anoma.Protobuf.Indexer.Blocks.Filtered.Response>}
 */
const methodDescriptor_BlockService_Filter = new grpc.web.MethodDescriptor(
  '/Anoma.Protobuf.BlockService/Filter',
  grpc.web.MethodType.UNARY,
  indexer_blocks_filter_pb.Request,
  indexer_blocks_filter_pb.Response,
  /**
   * @param {!proto.Anoma.Protobuf.Indexer.Blocks.Filtered.Request} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  indexer_blocks_filter_pb.Response.deserializeBinary
);


/**
 * @param {!proto.Anoma.Protobuf.Indexer.Blocks.Filtered.Request} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Anoma.Protobuf.Indexer.Blocks.Filtered.Response)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Anoma.Protobuf.Indexer.Blocks.Filtered.Response>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Anoma.Protobuf.BlockServiceClient.prototype.filter =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Anoma.Protobuf.BlockService/Filter',
      request,
      metadata || {},
      methodDescriptor_BlockService_Filter,
      callback);
};


/**
 * @param {!proto.Anoma.Protobuf.Indexer.Blocks.Filtered.Request} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Anoma.Protobuf.Indexer.Blocks.Filtered.Response>}
 *     Promise that resolves to the response
 */
proto.Anoma.Protobuf.BlockServicePromiseClient.prototype.filter =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Anoma.Protobuf.BlockService/Filter',
      request,
      metadata || {},
      methodDescriptor_BlockService_Filter);
};


module.exports = proto.Anoma.Protobuf;

